name: Deploy CloudOps Infrastructure and Application

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  AWS_REGION: us-east-1
  NODE_VERSION: '18'
  TERRAFORM_VERSION: '1.5.0'

jobs:
  terraform:
    name: 'Deploy Infrastructure'
    runs-on: ubuntu-latest
    outputs:
      api_url: ${{ steps.terraform.outputs.api_gateway_url }}
      cognito_user_pool_id: ${{ steps.terraform.outputs.cognito_user_pool_id }}
      cognito_client_id: ${{ steps.terraform.outputs.cognito_client_id }}
      s3_bucket: ${{ steps.terraform.outputs.s3_bucket_name }}
      cloudfront_id: ${{ steps.terraform.outputs.cloudfront_distribution_id }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
        terraform_wrapper: false

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Terraform Init
      working-directory: ./infra
      run: terraform init

    - name: Terraform Plan
      working-directory: ./infra
      run: terraform plan -out=tfplan

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      working-directory: ./infra
      run: terraform apply -auto-approve tfplan

    - name: Get Terraform Outputs
      if: github.ref == 'refs/heads/main'
      id: terraform
      working-directory: ./infra
      run: |
        echo "api_gateway_url=$(terraform output -raw api_gateway_url)" >> $GITHUB_OUTPUT
        echo "cognito_user_pool_id=$(terraform output -raw cognito_user_pool_id)" >> $GITHUB_OUTPUT
        echo "cognito_client_id=$(terraform output -raw cognito_client_id)" >> $GITHUB_OUTPUT
        echo "s3_bucket_name=$(terraform output -raw s3_bucket_name)" >> $GITHUB_OUTPUT
        echo "cloudfront_distribution_id=$(terraform output -raw cloudfront_distribution_id)" >> $GITHUB_OUTPUT

  backend:
    name: 'Deploy Backend'
    runs-on: ubuntu-latest
    needs: terraform
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Install dependencies
      working-directory: ./backend
      run: npm ci

    - name: Build Lambda functions
      working-directory: ./backend
      run: npm run build

    - name: Update Lambda functions
      working-directory: ./backend
      run: |
        # Get function names from Terraform output
        PROCESSOR_FUNCTION=$(aws lambda list-functions --query "Functions[?contains(FunctionName, 'processor')].FunctionName" --output text)
        API_FUNCTION=$(aws lambda list-functions --query "Functions[?contains(FunctionName, 'api')].FunctionName" --output text)
        
        # Update processor function
        aws lambda update-function-code \
          --function-name $PROCESSOR_FUNCTION \
          --zip-file fileb://dist/processor.zip
          
        # Update API function
        aws lambda update-function-code \
          --function-name $API_FUNCTION \
          --zip-file fileb://dist/api.zip

  frontend:
    name: 'Deploy Frontend'
    runs-on: ubuntu-latest
    needs: terraform
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Build application
      working-directory: ./frontend
      env:
        VITE_API_GATEWAY_URL: ${{ needs.terraform.outputs.api_url }}
        VITE_COGNITO_USER_POOL_ID: ${{ needs.terraform.outputs.cognito_user_pool_id }}
        VITE_COGNITO_CLIENT_ID: ${{ needs.terraform.outputs.cognito_client_id }}
        VITE_AWS_REGION: ${{ env.AWS_REGION }}
      run: npm run build

    - name: Deploy to S3
      working-directory: ./frontend
      run: |
        aws s3 sync dist/ s3://${{ needs.terraform.outputs.s3_bucket }}/ --delete

    - name: Invalidate CloudFront
      run: |
        aws cloudfront create-invalidation \
          --distribution-id ${{ needs.terraform.outputs.cloudfront_id }} \
          --paths "/*"

  test:
    name: 'Run Tests'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Test Backend
      working-directory: ./backend
      run: |
        npm ci
        npm test

    - name: Test Frontend
      working-directory: ./frontend
      run: |
        npm ci
        npm test
